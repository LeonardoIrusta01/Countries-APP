{"version":3,"sources":["Components/Landing/Landing.jsx","Redux/Actions/Index.js","Components/Country/Country_Card.jsx","Components/Countries/Countries.jsx","Components/Home/Home.jsx","Components/Search/Search.jsx","Components/Order/Order.jsx","Components/Filter/Filter.jsx","Components/NavBar/Navbar.jsx","Components/Country_Detail/Country_Detail.jsx","Components/Create_Activity/Create_Activity.jsx","App.js","reportWebVitals.js","Redux/Reducers/Index.js","Redux/Store/Index.js","index.js"],"names":["Landing","id","to","ASD","DES","HASD","HDES","URL","getCountries","dispatch","fetch","then","info","json","type","payload","getCountry","name","Country_Card","props","class","id3","src","flags","alt","subregion","connect","state","console","log","countries","useState","numPage","setNumPage","page_final","page_inicial","slice","useEffect","map","country","onClick","Home","input","setImput","onSubmit","e","preventDefault","alert","handleSubmit","className","placeholder","value","onChange","target","handleChange","order_abc","a","b","orden","oCountries","sort","nombreA","toUpperCase","nombreB","order_population","oPopulation","population","poblacionA","parseFloat","poblacionB","event","activities","filtro_reg","getActivities","changeCountries","response","s","Nav","country_Detail","getCountryDetail","match","params","continent","capital","area","c","duration","difficulty","season","Create_Activity","useDispatch","city","setCity","pais","setPais","paises","setPaises","setLoading","load","form","setForm","handleInputChange","setTimeout","array_countries","filteredCountries_","filter","p","length","Filt","fetch_Data","axios","get","data","Object","assign","post","reset","htmlFor","required","min","max","multiple","options","selections","i","selected","push","App","Fragment","path","exact","component","Country_Detail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","country_Name","country_id3","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e3858c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Landing.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Renderizamos nuestro Landing y agregamos un boton para envialo a nuestro Home.\r\nfunction Landing() {\r\n    return (\r\n        <div id=\"Count_Landing\">\r\n            <h1>COUNTRIES APP</h1>\r\n            <Link to={'/home'}>\r\n                <button id=\"Landing\">\r\n                    <h2>START</h2>\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import axios from 'axios';\r\nexport const ASD = 'Razas-A-Z';\r\nexport const DES = 'Razas-Z-A';\r\nexport const HASD = 'HABITANTES_ASD';\r\nexport const HDES = 'HABITANTES_DES';\r\nconst URL = 'http://localhost:3001'\r\n\r\n// Action donde nos traeremos todas los paises.\r\nexport function getCountries() {\r\n    return (dispatch) => {\r\n        return fetch(`${URL}/countries`).then(info => info.json())\r\n            .then(json => {\r\n                dispatch({ type: \"GET_COUNTRIES\", payload: json })\r\n            })\r\n    }\r\n}\r\n\r\n// Action donde nos traeremos un pais por su nombre.\r\nexport function getCountry(name) {\r\n    return (dispatch) => {\r\n        return fetch(`${URL}/countries?name=${name}`).then(info => info.json())\r\n            .then(json => {\r\n                dispatch({ type: \"GET_COUNTRY\", payload: json })\r\n            })\r\n    }\r\n}\r\n\r\n// Action donde traeremos un pais por su id de 3 digitos.\r\nexport function getCountryDetail(id3) {\r\n    return (dispatch) => {\r\n        return fetch(`${URL}/countries/${id3}`).then(info => info.json())\r\n            .then(json => {\r\n                dispatch({ type: \"GET_COUNTRY_DETAIL\", payload: json })\r\n            })\r\n    }\r\n}\r\n\r\n// Action donde nos traeremos todas las actividades.\r\nexport function getActivities() {\r\n    return (dispatch) => {\r\n        return fetch(`${URL}/activities`).then(info => info.json())\r\n            .then(json => {\r\n                dispatch({ type: \"GET_ACTIVITIES\", payload: json })\r\n            })\r\n\r\n    }\r\n}\r\n\r\n// Action donde crearemos una actividad.\r\nexport function postActivity(data) {\r\n    return (dispatch) => {\r\n        return axios.post(`${URL}/activity`, data)      // La data en enviada por body a nuestro back.\r\n            .then(response => {\r\n                console.log(data)\r\n                console.log(\"response: \")\r\n                console.log(response)\r\n                console.log(\"Done!\")\r\n                dispatch({ type: \"POST_ACTIVITY\", payload: response })\r\n            })\r\n    }\r\n}\r\n// Ordenamiento por nombres de countries.\r\nexport function order_abc(orden, oCountries) {\r\n    let countries = [...oCountries]\r\n\r\n    countries.sort((a, b) => {\r\n\r\n        var nombreA = a.name.toUpperCase()\r\n        var nombreB = b.name.toUpperCase()\r\n\r\n        if (orden === ASD) {\r\n            return nombreA < nombreB ? -1 : nombreA > nombreB ? 1 : 0;\r\n        }\r\n        if (orden === DES) {\r\n            return nombreA > nombreB ? -1 : nombreA < nombreB ? 1 : 0;\r\n        }\r\n    })\r\n    console.log(\"ESTOY EN ORDER_ABC\", countries)\r\n    return function (dispatch) {\r\n        dispatch({ type: \"ORDER_ABC\", payload: countries })\r\n    }\r\n}\r\n\r\n// Ordenamiento por poblacion de las countries.\r\nexport function order_population(orden, oPopulation) {\r\n    let population = [...oPopulation]\r\n\r\n    population.sort(function (a, b) {\r\n\r\n        var poblacionA = parseFloat(a.population)\r\n        var poblacionB = parseFloat(b.population)\r\n\r\n\r\n\r\n        if (orden === HASD) {\r\n            return poblacionA < poblacionB ? -1 : poblacionA > poblacionB ? 1 : 0;\r\n        }\r\n        if (orden === HDES) {\r\n            return poblacionA > poblacionB ? -1 : poblacionA < poblacionB ? 1 : 0;\r\n        }\r\n    })\r\n    console.log(\"ESTOY EN ORDER_P\", population)\r\n    return function (dispatch) {\r\n        dispatch({ type: \"ORDER_POPULATION\", payload: population })\r\n    }\r\n}\r\n\r\n// Action para filtrar por subregion\r\nexport function filtro_reg(subregion) {\r\n    return (dispatch) => {\r\n        return fetch(`${URL}/countries?region=${subregion}`).then(info => info.json())\r\n            .then(json => {\r\n                dispatch({ type: \"GET_COUNTRY\", payload: json })\r\n            })\r\n    }\r\n}\r\n\r\nexport function changeCountries(name) {\r\n    return function (dispatch) {\r\n        return fetch(`${URL}/activities?name=${name}`).then(response => response.json())\r\n            .then(json => {\r\n                dispatch({ type: \"CHANGE_COUNTRIES\", payload: json })\r\n            })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Country_Card.css';\r\n\r\n// Renderizamos una country en especifico.\r\nexport function Country_Card(props) {\r\n    return (\r\n        <div class='card'>\r\n            <Link to={`/home/country_detail/${props.id3}`}>\r\n                <div id='con_flag'>\r\n                    <img id='flag' src={props.flags} alt={`la bandera de ${props.name} no se encuentra :(`} />\r\n                </div>\r\n                <div>\r\n                    <div id='text_cards'>\r\n                        <h1>{props.name}</h1>\r\n                        <h1>{props.subregion}</h1>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country_Card;","import React, { useEffect, useState } from \"react\";\r\nimport './Countries.css';\r\nimport { connect } from 'react-redux';\r\nimport { getCountries, getCountry } from '../../Redux/Actions/Index';\r\nimport Country from '../Country/Country_Card';\r\n\r\nexport function Countries(props) {\r\n    // Seteamos un estado para nuestro paginado...\r\n    const [numPage, setNumPage] = useState(1);\r\n\r\n    const grupo = 10;\r\n    const page_final = numPage * grupo;\r\n    const page_inicial = page_final - grupo;\r\n\r\n    const countries = props.countries.slice(page_inicial, page_final)\r\n\r\n    useEffect(() => {\r\n        props.getCountries()\r\n    }, [])\r\n\r\n    // Aplicamos unas condiciones para utilizar bien nuestro paginado.\r\n    if (numPage < 1) {\r\n        setNumPage(1)\r\n        return;\r\n    }\r\n    else if (numPage > 25) {\r\n        setNumPage(25)\r\n        return;\r\n    }\r\n\r\n    // Renredizamos nuestras Countries.\r\n    return (\r\n        <div>\r\n            <div id='cont'>\r\n                {countries ? countries.map(country =>\r\n                    <div>\r\n                        <Country\r\n                            id3={country.id3}\r\n                            name={country.name}\r\n                            flags={country.flags}\r\n                            subregion={country.subregion} />\r\n                    </div>) : (<p>Pais No Encontrado</p>)}\r\n\r\n            </div>\r\n            <div id='pag'>\r\n                <button onClick={() => setNumPage(numPage - 1)}>◀</button>\r\n                <h3>{numPage}</h3>\r\n                <button onClick={() => setNumPage(numPage + 1)}>▶</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// Funcion para setear los estados de nuestra informacion.\r\nfunction mapStateToProps(state) {\r\n    console.log(state)\r\n    return {\r\n        countries: state.countries\r\n    }\r\n}\r\n\r\n// Funcion para dispachar la accion de nuestro front y traernos la informacion solicitada.\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getCountries: () => dispatch(getCountries()),\r\n        getCountry: name => dispatch(getCountry(name))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries)","import React from \"react\";\r\nimport './Home.css';\r\nimport Countries from '../Countries/Countries.jsx';\r\n\r\n// Renderizaremos nuestas Countries.\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Countries />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { getCountry } from '../../Redux/Actions/Index';\r\n\r\nexport function Search(props) {\r\n    //Setamos nuestro estado inical para el imput.\r\n    const [input, setImput] = useState({\r\n        name: \"\",\r\n    })\r\n\r\n    function handleChange(e) {\r\n        setImput({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (input.name) {\r\n            props.getCountry(input.name)\r\n        }\r\n        else if (!input.name) {\r\n            alert(\"Nombre invalido\")\r\n            console.log(\"Introduzca un nombre correcto\")\r\n        }\r\n    }\r\n\r\n    // Renderizamos nuestra SearchBar\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"bar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Buscar...\"\r\n                        name=\"name\"\r\n                        value={input.name}\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                    <button type=\"sumbit\">Buscar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        countries: state.countries\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getCountry: name => dispatch(getCountry(name))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { order_abc, order_population, ASD, DES, HASD, HDES } from '../../Redux/Actions/Index';\r\n\r\nexport function Order(props) {\r\n\r\n    function handleDispatchOrder(event) {\r\n        if (event.target.value === ASD || event.target.value === DES) {\r\n            props.order_abc(event.target.value, props.countries)\r\n        }\r\n    }\r\n\r\n    function handleDispatchHab(event) {\r\n        if (event.target.value === HASD || event.target.value === HDES) {\r\n            props.order_population(event.target.value, props.countries)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <select onChange={handleDispatchOrder}>\r\n                <option>Order by Name</option>\r\n                <option value={ASD}>Ascendant</option>\r\n                <option value={DES}>Descendant</option>\r\n            </select>\r\n            <select onChange={handleDispatchHab}>\r\n                <option>Order by Population</option>\r\n                <option value={HDES}>Ascendant</option>\r\n                <option value={HASD}>Descendant</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        countries: state.countries\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        order_abc: (a,b) => dispatch(order_abc(a,b)),\r\n        order_population: (a,b) => dispatch(order_population(a,b))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Order)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filtro_reg, changeCountries, getActivities, getCountries } from '../../Redux/Actions/Index';\r\n\r\nexport function Filter(props) {\r\n\r\n    useEffect(() => {\r\n\t\tprops.getActivities()\r\n\t}, [])\r\n\r\n\tfunction handleDispatchCont(event) {\r\n\t\tprops.filtro_reg(event.target.value)\r\n\t}\r\n\tfunction handleDispatchAct(event) {\r\n\t\tprops.changeCountries(event.target.value)\r\n\t}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <select name=\"region\" onChange={handleDispatchCont} key='1006'>\r\n                <option value=\"\" key=\"1001\">Filter by Continent</option>\r\n                <option value=\"Europe\"  key=\"1002\">Europe</option>\r\n                <option value=\"America\" key=\"1003\">America</option>\r\n                <option value=\"Asia\"    key=\"1004\">Asia</option>\r\n                <option value=\"Oceania\" key=\"1005\">Oceania</option>\r\n                <option value=\"Africa\"  key=\"1006\">Africa</option>\r\n            </select>\r\n\r\n            <select name=\"activity\" onChange={handleDispatchAct} key='2002'>\r\n                <option value=\"\" key='2003'> Filter by Activity</option>\r\n                {props.activities && props.activities.map(s=>(\r\n                    <option>{s.name}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        countries: state.countries,\r\n        activities: state.activities,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        filtro_reg: (a,b) => dispatch(filtro_reg(a,b)),\r\n        getActivities: ()=> dispatch(getActivities()),\r\n        changeCountries: (name)=> dispatch(changeCountries(name)),\r\n        getCountries: () => dispatch(getCountries()),\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps,mapDispatchToProps)(Filter)","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n// import logo from '../../Pictur'\r\nimport './Navbar.css';\r\nimport Search from '../Search/Search.jsx';\r\nimport Order from \"../Order/Order.jsx\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <nav id=\"Content_nav\">\r\n                    <Link to={'/home'}>\r\n                        <h1 id=\"Home\">Home</h1>\r\n                    </Link>\r\n                    <Link to={'/activity'}>\r\n                        <h2 id='Actividad' >Crear Actividad </h2>\r\n                    </Link>\r\n                </nav>\r\n                <hr />\r\n                <div id=\"NavBar\">\r\n                    <Order />\r\n                    <Filter />\r\n                    <Search />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav;","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { getCountryDetail } from '../../Redux/Actions/Index';\r\nimport Nav from '../NavBar/Navbar';\r\nimport './Country_Detail.css';\r\n\r\nfunction Detail_country(props) {\r\n\r\n    useEffect(() => {\r\n        const id3 = props.match.params.id3;\r\n        props.getCountryDetail(id3)\r\n    }, [])\r\n\r\n    return (\r\n        <div id='detalles'>\r\n            <div>\r\n                <Nav />\r\n            </div>\r\n            <div id=\"datos_c\">\r\n                <div id='flag'>\r\n                    <img src={props.country_Detail.flags} alt={props.country_Detail.name} />\r\n                </div>\r\n                <div id='informacion'>\r\n                    <h1>{props.country_Detail.name}</h1>\r\n                    <h2>{props.country_Detail.continent}</h2>\r\n                    <h3>Id: {props.country_Detail.id3}</h3>\r\n                    <p>Capital: {props.country_Detail.capital}</p>\r\n                    <p>Subregión: {props.country_Detail.subregion}</p>\r\n                    <p>Area: {props.country_Detail.area} km2 </p>\r\n                    <p>Population: {props.country_Detail.population} </p>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <div id=\"actividades_c\">\r\n                <hr />\r\n                <h1>Activities</h1>\r\n                <p >{props.country_Detail.activities && props.country_Detail.activities.map(c =>\r\n                    <div>\r\n                        <hr />\r\n                        <div id=\"Activity\">\r\n                            <div>\r\n                                Activity: {c.name}\r\n                            </div>\r\n                            <div>\r\n                                Duration: {c.duration}\r\n                            </div>\r\n                            <div>\r\n                                Difficulty: {c.difficulty}\r\n                            </div>\r\n                            <div>\r\n                                Season: {c.season}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        country_Detail: state.country_Detail,\r\n        activities: state.activities\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getCountryDetail: (id3) => dispatch(getCountryDetail(id3))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail_country)\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch,  } from 'react-redux';\r\nimport { postActivity, getCountries } from '../../Redux/Actions/Index';\r\nimport Nav from '../NavBar/Navbar.jsx';\r\nimport './Create_Activity.css';\r\n\r\nconst Create_Activity = () => {\r\n    const dispatch = useDispatch();\r\n    // const id3Code = useSelector(state => state.id3Code)\r\n    // const countries = useSelector(state => state.countries)\r\n    const [city, setCity] = useState([])\r\n    const [pais, setPais] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [load, setLoad] = useState(true)\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        duration: '',\r\n        difficulty: '',\r\n        season: '',\r\n    })\r\n    const Filt = (array_countries) => {\r\n        setPaises([]);\r\n        let filteredCountries_ = array_countries;\r\n        filteredCountries_ = filteredCountries_.filter(p => p.activities && p.activities.length > 0)\r\n        setPaises(filteredCountries_)\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setForm({\r\n            ...form,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleCountry = (event) => {\r\n        event.preventDefault();\r\n        const options = event.target.options;\r\n        // console.log(options)\r\n        const selections = [];\r\n        for (let i = 0; i < options.length; i++) options[i].selected && selections.push(options[i].value);\r\n        setPais(selections)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(postActivity(Object.assign(form, { pais: pais })))\r\n        event.target.reset();\r\n        alert('Activity Created')\r\n        setTimeout(() => { dispatch(getCountries()) }, 500)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n            Filt(paises)\r\n            setLoading(false)\r\n        }, 1500)\r\n    }, [load])\r\n\r\n    useEffect(() => {\r\n        const fetch_Data = async () => {\r\n            setLoading(true);\r\n\r\n            const info = await axios.get('http://localhost:3001/countries')\r\n\r\n            setCity(info.data);\r\n            setLoading(false);\r\n        };\r\n        fetch_Data();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div id='Nav_in_form'>\r\n                <Nav/>\r\n            </div>\r\n            <div id='form_of_charge'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div id='title'>\r\n                        <h1>Load your activity</h1>\r\n                    </div>\r\n                    <div id='datos'>\r\n                        <div>\r\n                            <label htmlFor=\"\">Name:</label>\r\n                            <input type=\"text\" name=\"name\" onChange={handleInputChange} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Duration:</label>\r\n                            <input type=\"text\" name=\"duration\" onChange={handleInputChange} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Difficulty:</label>\r\n                            <input type='number' min='1' max='5' name='difficulty' onChange={handleInputChange} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Season:</label>\r\n                            <select name='season' onChange={handleInputChange} required>\r\n                                <option ></option>\r\n                                <option value=\"Verano\">Verano(summer)</option>\r\n                                <option value=\"Invierno\">Winter(Invierno)</option>\r\n                                <option value=\"Otoño\">Fall(Otoño)</option>\r\n                                <option value=\"Primavera\">Spring(primavera)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Countries: </label>\r\n                            <select id=\"countries_sel\" multiple name=\"country\" onChange={handleCountry} required >\r\n                                {city.length > 0 ? city.map((pais, i) => {\r\n                                    return <option value={pais.id3} key={pais.id3}>{`${pais.id3}(${pais.name})`}</option>\r\n                                }) : <option>Cargando</option>}\r\n                            </select>\r\n                        </div>\r\n                        <input id='btn_Form' type='submit' value='Create Activity' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create_Activity","import './App.css';\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Landing from './Components/Landing/Landing.jsx';\r\nimport Home from './Components/Home/Home.jsx';\r\nimport Nav from './Components/NavBar/Navbar.jsx'\r\nimport Country_Detail from './Components/Country_Detail/Country_Detail.jsx';\r\nimport Create_Activity from './Components/Create_Activity/Create_Activity.jsx'\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"App\">\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Route path=\"/home\" exact component={Nav} />\r\n        <Route path=\"/home\" exact component={Home} />\r\n        <Route path=\"/home/country_detail/:id3\" exact component={Country_Detail} />\r\n        <Route path=\"/activity\" component={Create_Activity}/>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// Seteamos nuestros estados iniciales:\r\nconst initialState = {\r\n    countries: [],\r\n    activities: [],\r\n    country_Name: [],\r\n    country_Detail: {},\r\n    country_id3: [],\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        // Nos traemos todas las countries.\r\n        case \"GET_COUNTRIES\": {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        }\r\n        // Nos traemos una country por su name.\r\n        case \"GET_COUNTRY\": {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        }\r\n\r\n        // Nos traemos un pais segun su id de 3 digitos.\r\n        case \"GET_COUNTRY_DETAIL\": {\r\n            return {\r\n                ...state,\r\n                country_Name: action.payload,\r\n                country_Detail: action.payload\r\n            }\r\n        }\r\n\r\n        // Nos traeremos todas las actividades.\r\n        case \"GET_ACTIVITIES\": {\r\n            return {\r\n                ...state,\r\n                activities: action.payload\r\n            }\r\n        }\r\n\r\n        // Creamos una actividad.\r\n        case \"POST_ACTIVITY\":\r\n            return {\r\n                ...state,\r\n                country_id3: action.payload\r\n            }\r\n\r\n        // Ordenamos por nombre\r\n        case \"ORDER_ABC\": {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        }\r\n\r\n        // Ordenamos por poblacion\r\n        case \"ORDER_POPULATION\": {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        }\r\n\r\n        // Filtramos por Subregion\r\n        case \"FILTER_SUBREG\": {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        }\r\n        case \"CHANGE_COUNTRIES\": {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import rootReducer from '../Reducers/Index';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Creamos nuestra Store.\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n))\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './Redux/Store/Index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}